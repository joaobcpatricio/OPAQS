[General]
network = NetworkTormV2

# simulation control parameters
sim-time-limit = 10s#time of simulation
repeat = 1

# RNG initialization (Commons RNG provides generators of "pseudo-randomness", i.e. the generators produce deterministic sequences of bytes)
num-rngs = 4
seed-0-mt = 128 # reserved for general use
seed-1-mt = 128 # reserved for application
seed-2-mt = 128 # reserved for forwarding
seed-3-mt = 128 # reserved for mobility

# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true

# network parameters
#**.numNodes = ${2,3,4}
**.numNodes = 2		# number of nodes


# all other layers are configured to default parameter values. Uncomment and change, if needed.

# application layer (herald)
**.application.usedRNG = 1
**.application.dataGenerationInterval = 1ms # period that a data message is generated
**.application.dataSizeInBytes = 10	# size of the generated data
**.application.ttl = 999999s # never expires - defines when data time expires (is verified in storage)
#**.application.nodeGenMsg=0		#Node nº that generates de msg --> no longer used--------------------------*
**application.destinationAddr="Wf:00:00:00:00:02"	#Default destination of the generated msg (GW)
**application.destinationBTAddr="Bt:00:00:00:00:02"	#Default destination of the generated msg (GW)
**application.nodesThatGen = true	#indicate if the following nodes are the ones that generate data (true) or that don't (false)
**application.nodesGenMsg="0"	# list of nodes that generate (true) or not (false) data
**application.startMultipleMsg = true
**application.numMultipleMsg = 100
**application.hopsListSize = 50 # maximum number of hops Addr a DataMsg can save

# routing layer parameters
**.routingLayer = "RoutingLayer"#"EpidemicRoutingLayer"	# routing protocol file name
**.routing.maximumCacheSize = 5000byte # 500 KB cache # maximum size of cache/storage ---------------*
**.routing.maximumHopCount = 25		# maximum number of hops of a msg
**.routing.useTTL = false	#If true it ages data in cache (time to leave)

# neighboring layer parameters (these times take care of neighboring synchronization and periodicity of sending beacons
**.neighboring.antiEntropyInterval = 500ms#200#300s        #time before syncing again - periodicity of beacons
**.neighboring.maximumRandomBackoffDuration = 1s	#Time to start the simulation - a backOffTime
**.neighboring.delayPerDataMsg = 0.1 # estimation of 100ms of delay per data message
**neighboring.usedRNG = 2
**.neighboring.GWAddr = "02:00:00:00:00:09" #GW --> outdated-futuramente será aqui inserida a lista de GWs--------------------------------*
**.neighboring.sendWifiFirst = true#false		#by default sends beacons through wifi
**.neighboring.maxLengthGraph=20	#number max of Vertices of the Graph - ALSO DECLARE this on GraphT.h at "V"
#**.neighboring.maximumNoVert = 20;	# Maxmimum number of graph vertices

# storage layer parameters
#**.storage.maximumCacheSize=5000byte	# Maximum size of the storage (cache)

# wireless interface parameters
**.wirelessIfc.wirelessRange = 15m#30m
**.wirelessIfc.neighbourScanInterval = 50ms#500ms	#updates the list of neighbours on the interface
**.wirelessIfc.bandwidthBitRate = 100000bps # 100 Kbps
**.wirelessIfc.wirelessHeaderSize = 32byte #802.11 a/b/c header  #16byte # BT header
**.wirelessIfc.minSSI=-90

# bluetooth interface parameters
**.bluetoothIfc.wirelessRange = 15m#30m
**.bluetoothIfc.neighbourScanInterval = 100ms#500ms
**.bluetoothIfc.bandwidthBitRate = 100000bps # 100 Kbps
**.bluetoothIfc.wirelessHeaderSize =16byte #802.11 a/b/c header  #16byte # BT header
**.bluetoothIfc.minSSI=-90



# INET mobility parameters (BonnMotion)
**.mobilityType = "BonnMotionMobility"
**.mobility.traceFile = "paths/Moves2.movements"
**.mobility.nodeId = -1  #means "host module's index"


[Config A]
**.mobility.traceFile = "paths/A.movements"
# network parameters
**.numNodes = ${2,3}
#**.numNodes = 3
**.wirelessIfc.wirelessRange = 25m
**.bluetoothIfc.wirelessRange = 25m

[Config B]
**.mobility.traceFile = "paths/B.movements"
# network parameters
**.numNodes = 4
**.wirelessIfc.wirelessRange = 35m
**.bluetoothIfc.wirelessRange = 35m

[Config T1]
**.mobility.traceFile = "paths/T1.movements"
# network parameters
**.numNodes = 3
**.wirelessIfc.wirelessRange = 25m
**.bluetoothIfc.wirelessRange = 25m

[Config T2]
**.mobility.traceFile = "paths/T2.movements"
**.numNodes = 5
**.wirelessIfc.wirelessRange = 25m
**.bluetoothIfc.wirelessRange = 25m


[Config Moves4]
**.mobility.traceFile = "paths/Moves4.movements"
sim-time-limit = 11s#11s#86400s # 1 day

[Config SteadyWithMsg]
**.application.dataGenerationInterval = 4s#600s # every 10 minutes - we simulate for 1 day
**.mobility.traceFile = "paths/Steady1.movements"

[Config Moves5]
**.mobility.traceFile = "paths/Moves5.movements"
